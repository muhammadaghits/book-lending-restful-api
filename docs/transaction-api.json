{
  "swagger": "2.0",
  "info": {
    "title": "Book Transaction API",
    "description": "Book Transaction API",
    "version": "1.0.0",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "schemes": [
    "https"
  ],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "basePath": "/api",
  "paths": {
    "/borrow" : {
      "post": {
        "tags": ["Borrow"],
        "summary": "Borrow a book",
        "description": "Borrow a book",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters" : [ {
          "name": "input",
          "in": "body",
          "description": "Parameter of borow, the book_code must be alphabet before hypen and after hypen must be number, example (JK-45). The borrow_date format must be (YYYY-MM-DD)",
          "schema": {
            "$ref": "#/definitions/Borrow"
          }
        }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BorrowResponse"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "500": {
            "description": "INTERNAL_SERVER_ERROR",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/return" : {
      "post": {
        "tags": ["Return"],
        "summary": "Return a book",
        "description": "Return a book",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters" : [ {
          "name": "input",
          "in": "body",
          "description": "Parameter of return, the book_code must be alphabet before hypen and after hypen must be number, example (JK-45). The return_date format must be (YYYY-MM-DD)",
          "schema": {
            "$ref": "#/definitions/Return"
          }
        }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReturnResponse"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "500": {
            "description": "INTERNAL_SERVER_ERROR",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Borrow" : {
      "properties": {
        "member_code": {
          "type": "string"
        },
        "book_code": {
          "type": "string"
        },
        "borrow_date": {
          "type": "string"
        }
      }
    },
    "BorrowResponse" : {
      "properties": {
        "status": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "object",
          "properties": {
            "member_code": {
              "type": "string"
            },
            "book_code": {
              "type": "string"
            },
            "borrow_date": {
              "type": "string"
            },
            "expected_return_date": {
              "type": "string"
            },
            "updatedAt": {
              "type": "string"
            },
            "createdAt": {
              "type": "string"
            },
            "return_date" : {
              "type": "string"
            }
          }
        }
      }
    },
    "Return" : {
      "properties": {
        "member_code": {
          "type": "string"
        },
        "book_code": {
          "type": "string"
        },
        "return_date": {
          "type": "string"
        }
      }
    },
    "ReturnResponse" : {
      "properties": {
        "status": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "string"
        }
      }
    },
    "BadRequest": {
      "properties": {
        "status": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "string"
        }
      }
    },
    "Error": {
      "properties": {
        "status": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "string"
        }
      }
    }
  }
}
